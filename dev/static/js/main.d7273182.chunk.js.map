{"version":3,"sources":["components/card/index.js","components/scorebar/index.js","components/timer/index.js","components/gameboard/index.js","pages/game.js","pages/create-room.js","pages/ShareRoomPage.js","pages/JoinRoomPage.js","pages/SetupPlayerPage.js","lib/dummy.js","App.js","serviceWorker.js","index.js"],"names":["cardStyles","border","borderRadius","cursor","prepareCardStyle","word","teamStyles","doubleAgent","isDoubleAgent","isRevealed","bgColour","red","blue","null","team","backgroundColor","Object","assign","includes","color","Card","classValue","handleSelectWord","onClick","e","preventDefault","className","style","value","scorebarStyles","margin","prettyTeamName","colourForTeam","toLowerCase","addScoreBoxStyles","activeTeam","height","background","fontWeight","Scorebar","more","score","total","players","spymaster","map","player","idx","key","timeOut","percentRemaining","minutes","seconds","getTimeRemaining","expiresAt","startedAt","remainingMilliseconds","Date","now","totalTime","parseInt","Timer","props","start","frameId","requestAnimationFrame","tick","timeLeft","stop","setState","setTimeout","cancelAnimationFrame","state","this","textAlign","slice","formatTime","role","width","aria-valuenow","aria-valuemin","aria-valuemax","React","Component","Gameboard","redTeamScore","redTeamTotalCards","blueTeamScore","blueTeamTotalCards","words","i","id","Game","handleNewRoom","handleJoinRoom","handleNewGame","handleTeamSelection","handleGameAction","JSON","stringify","userId","username","roomId","roomName","losingTeam","msg","CreateRoomPage","handleCreateRoom","useState","componentRoomName","setRoomname","to","htmlFor","type","aria-describedby","placeholder","onChange","target","shareLink","URL","window","location","href","origin","ShareRoomPage","linkTextRef","useRef","copiedStateMsg","setCopyState","ref","current","select","document","execCommand","focus","copyLinktoClipboard","JoinRoomPage","queryRoomId","URLSearchParams","useLocation","search","get","componentRoomId","setComponentRoomId","onSubmit","disabled","required","autoComplete","bgColourForTeam","SetupPlayerPage","handleUpdatePlayer","componentUsername","setComponentUsername","componentTeam","setComponentTeam","componentRole","setComponentRole","marginRight","marginLeft","borderColor","host","inspect","obj","console","log","App","dummyData","toast","prevState","_handleClick","channel","push","body","cardId","clientSideGameAction","find","w","gameState","alert","newActiveTeam","newState","reduce","acc","curr","socket","Socket","params","userToken","connect","on","payload","error","room_id","user_id","active_team","losing_team","blue_total","red_total","blue_score","red_score","join","receive","messages","reason","exact","path","padding","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d7273182.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst cardStyles = {\n  border: \"2px black solid\",\n  borderRadius: \"10px\",\n  cursor: \"pointer\"\n};\n\nconst bgColourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\",\n  null: \"#FCECD7\",\n  doubleAgent: \"black\"\n}[team]);\n\nconst addFontColourForBgColour = (colour) => (\n  [\"#80C2FF\", \"#FCECD7\"].includes(colour) ? {} : { color: \"white\" }\n);\n\nconst prepareCardStyle = (word) => {\n  let teamStyles = {};\n  let doubleAgent = word.isDoubleAgent ? \"doubleAgent\" : false;\n\n  if (word.isRevealed) {\n    const bgColour = bgColourForTeam(doubleAgent || word.team);\n    teamStyles.backgroundColor = bgColour;\n    Object.assign(teamStyles, addFontColourForBgColour(bgColour));\n  }\n  return Object.assign({}, cardStyles, teamStyles);\n}\n\nconst Card = ({ classValue, handleSelectWord, word }) => (\n  <div\n    onClick={(e) => e.preventDefault() || handleSelectWord()}\n    className={`${classValue} game-card card-hover`}\n    style={prepareCardStyle(word)}\n  >\n    <p>{word.value}</p>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst scorebarStyles = {\n  margin: \"1rem\"\n};\n\nconst prettyTeamName = {\n  red: \"Red\",\n  blue: \"Blue\"\n};\n\nconst colourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\"\n}[team.toLowerCase()]);\n\nconst addComponentStyles = (more) => Object.assign({}, scorebarStyles, more || {});\n\nconst addScoreBoxStyles = ({ activeTeam, team }) => ({\n  border: `2px solid ${colourForTeam(team)}`,\n  borderRadius: \"20px\",\n  height: \"138px\",\n  color: activeTeam === team && \"white\",\n  background: activeTeam === team && colourForTeam(team),\n  fontWeight: activeTeam === team && \"bold\"\n});\n\nconst Scorebar = ({\n  activeTeam,\n  classValue,\n  score,\n  total,\n  team,\n  players,\n  spymaster\n}) => (\n  <div className={classValue} style={addComponentStyles()}>\n    <div style={addScoreBoxStyles({ activeTeam, team })}>\n      <p>Score</p>\n      <p>{`${score} / ${total}`}</p>\n    </div>\n\n    <p style={{color: colourForTeam(team)}}>\n      {prettyTeamName[team]}\n    </p>\n\n    <div>\n      <p style={{color: colourForTeam(team)}}>Players</p>\n      {players.map((player, idx) => <p key={idx}>{player}</p>)}\n    </div>\n\n    <p style={{color: colourForTeam(team)}}>Spymaster</p>\n    <p>{spymaster}</p>\n  </div>\n);\n\nexport default Scorebar;\n","import React from 'react'\nimport './Timer.css';\n\nconst timeOut = {\n  percentRemaining:0,\n  total:0,\n  minutes:0,\n  seconds:0\n};\n\nconst getTimeRemaining = (expiresAt, startedAt) => {\n  const remainingMilliseconds = expiresAt - Date.now();\n  const totalTime = (expiresAt - startedAt);\n\n  return {\n    percentRemaining: (Date.now() - startedAt) * 100 / totalTime,\n    total: remainingMilliseconds,\n    minutes: parseInt(remainingMilliseconds / (60 * 1000)),\n    seconds: parseInt(remainingMilliseconds / 1000)\n  };\n}\n\nconst formatTime = ({ minutes, seconds }) => `${minutes}:${(\"0\" + seconds % 60).slice(-2)}`;\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { timeLeft: getTimeRemaining(props.expiresAt, props.startedAt) }\n  }\n\n  // Wait until the component has mounted to start the animation frame\n  componentDidMount() {\n    this.start()\n  }\n\n  // Clean up by cancelling any animation frame previously scheduled\n  componentWillUnmount() {\n    this.stop()\n  }\n\n  start = () => {\n    this.frameId = requestAnimationFrame(this.tick)\n  }\n\n  tick = () => {\n    const timeLeft = getTimeRemaining(this.props.expiresAt, this.props.startedAt);\n\n    if (timeLeft.total <= 0) {\n      this.stop()\n      this.setState({ timeLeft: timeOut });\n      // ...any other actions to do on expiration\n    } else {\n      this.setState(\n        { timeLeft },\n        () => setTimeout(() => { this.frameId = requestAnimationFrame(this.tick) }, 1000 / 12)\n      )\n    }\n  }\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  render() {\n    return (\n      <div className={`${this.props.classValue} timer-component`}>\n        <i className={\"icon ion-icon ion-android-stopwatch\"} />\n        <div className={\"progress-bar-content\"}>\n          <div style={{textAlign: \"left\"}}>{formatTime(this.state.timeLeft)}</div>\n            <div className=\"progress\">\n              <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${this.state.timeLeft.percentRemaining}%`}} aria-valuenow={this.state.timeLeft.percentRemaining} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport Card from '../card';\nimport Scorebar from '../scorebar';\nimport Timer from '../timer';\nimport './Gameboard.css'\n\nconst colourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\"\n}[team]);\n\nconst prettyTeamName = {\n  red: \"Red\",\n  blue: \"Blue\"\n};\n\nconst turnIndicatorStyle = (team) => ({\n  color: colourForTeam(team)\n})\n\nconst Gameboard = ({\n  activeTeam,\n  handleSelectWord,\n  redTeamScore,\n  redTeamTotalCards,\n  blueTeamScore,\n  blueTeamTotalCards,\n  words\n}) => (\n  <div>\n    <h1>C O D E N A M E S</h1>\n    <h2 style={turnIndicatorStyle(activeTeam)}>{prettyTeamName[activeTeam]}'s Turn</h2>\n    <div className={\"timer-wrapper\"}>\n      <Timer classValue={\"timer-container\"} startedAt={Date.now()} expiresAt={Date.now() + (2 * 60 * 1000)} />\n    </div>\n    <div className=\"wrapper\">\n      <Scorebar\n        activeTeam={activeTeam}\n        classValue={\"left-sidebar\"}\n        score={redTeamScore}\n        total={redTeamTotalCards}\n        team={\"red\"}\n        players={[\"shoyu\", \"scallion\", \"nori\"]}\n        spymaster={\"chasu\"}\n        />\n\n      <div className=\"gameboard\">\n        {[0, 1, 2, 3, 4].map(i =>\n          <div key={i} className=\"card-row\">\n            {words.slice(0 + i * 5, 5 + i * 5).map(word =>\n              <Card\n                key={word.id}\n                word={word}\n                handleSelectWord={() => handleSelectWord(word, activeTeam)}\n                classValue={\"card\"}\n              />\n            )}\n          </div>\n        )}\n      </div>\n\n      <Scorebar\n        activeTeam={activeTeam}\n        classValue={\"right-sidebar\"}\n        score={blueTeamScore}\n        total={blueTeamTotalCards}\n        team={\"blue\"}\n        players={[\"shoyu\", \"scallion\", \"nori\"]}\n        spymaster={\"chasu\"}\n        />\n    </div>\n  </div>\n);\n\nexport default Gameboard;\n","import React from 'react';\nimport Gameboard from '../components/gameboard';\n\nconst Game = ({\n  state,\n  handleNewRoom,\n  handleJoinRoom,\n  handleNewGame,\n  handleTeamSelection,\n  handleGameAction,\n  handleSelectWord\n}) => (\n  <div className=\"App\">\n    <button onClick={() => handleNewRoom()}>Sign Into Room</button>\n    <button onClick={() => handleJoinRoom()}>Join Room</button>\n    <button onClick={() => handleNewGame()}>New Game</button>\n    <button onClick={() => handleTeamSelection(\"red\")}>I am red!</button>\n    <button onClick={() => handleTeamSelection(\"blue\")}>I am blue!</button>\n    <button onClick={() => handleGameAction(2)}>Take action!</button>\n    <div>Player: {JSON.stringify({\n      userId: state.userId, username: state.username, roomId: state.roomId, roomName: state.roomName, team: state.team, role: state.role\n    })}</div>\n    <div>Game has {state.state}</div>\n    {state.losingTeam && <div>{state.losingTeam} lost!</div>}\n    {state.msg && <div>Error: {state.msg}</div>}\n    <Gameboard\n      activeTeam={state.activeTeam}\n      redTeamScore={state.redTeamScore}\n      redTeamTotalCards={state.redTeamTotalCards}\n      blueTeamScore={state.blueTeamScore}\n      blueTeamTotalCards={state.blueTeamTotalCards}\n      handleSelectWord={handleSelectWord}\n      words={state.words} />\n  </div>\n);\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nconst CreateRoomPage = ({\n  roomId,\n  roomName,\n  handleCreateRoom\n}) => {\n  const [componentRoomName, setRoomname] = useState(roomName);\n  return (\n    roomId\n    ? <Redirect to=\"share-room\" />\n    : <div className=\"create-room-page container container-slim\">\n      <h1 className=\"center mb-5\">C O D E N A M E S</h1>\n\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"roomname\">Room name</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"roomname\"\n              aria-describedby=\"roomnameHelp\"\n              placeholder=\"zeekybookydook\"\n              value={componentRoomName}\n              onChange={(e) => setRoomname(e.target.value)}\n            />\n\n            <div className=\"input-group-append\">\n              <div className=\"btn btn-primary disabled\">Random</div>\n            </div>\n          </div>\n          <small id=\"roomnameHelp\" className=\"form-text text-muted\">minimum of 6 characters</small>\n        </div>\n\n        <button\n          type=\"button\"\n          className={`btn btn-secondary ${componentRoomName ? '' : 'disabled'}`}\n          onClick={() => componentRoomName && handleCreateRoom(componentRoomName)}>\n          Create a Room\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateRoomPage;\n","import React, { useState, useRef } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst shareLink = (roomId) => {\n  return `${new URL(window.location.href).origin}/join-room?roomId=${roomId}`\n};\n\nconst copyLinktoClipboard = (e, linkTextRef, setCopyState) => {\n  linkTextRef.current.select();\n  document.execCommand('copy');\n\n  e.target.focus();\n  setCopyState(\"Link Copied! \");\n};\n\nconst ShareRoomPage = ({ roomId, roomName }) => {\n  const linkTextRef = useRef(null);\n  const [copiedStateMsg, setCopyState] = useState(\"\");\n\n  return (\n    <div className=\"share-room-page container container-slim\">\n      <h1 className=\"center mb-5\">C O D E N A M E S</h1>\n      <div>Your room is ready!</div>\n\n      <div className=\"input-group mt-4\">\n        <input\n          ref={linkTextRef}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"roomShare\"\n          aria-describedby=\"roomShareHelp\"\n          value={shareLink(roomId)}\n          onChange={e => e.preventDefault()}\n        />\n\n        <div className=\"input-group-append\">\n          <div className=\"btn btn-primary\" onClick={e => copyLinktoClipboard(e, linkTextRef, setCopyState)}>Copy</div>\n        </div>\n\n      </div>\n      <small id=\"roomShareHelp\" className=\"form-text text-muted\">{copiedStateMsg + \"Share the link with your friends!\"}</small>\n\n      <Link to={`/join-room?roomId=${roomId}`}>\n        <button type=\"button\" className=\"btn btn-secondary mt-4\">Open Room</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default ShareRoomPage;\n","import React, { useState } from 'react';\nimport {\n  useLocation\n} from \"react-router-dom\";\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst JoinRoomPage = ({\n  userId,\n  username,\n  roomId,\n  roomName,\n  handleJoinRoom\n}) => {\n  const queryRoomId = useQuery().get(\"roomId\") || \"\";\n  const [componentRoomId, setComponentRoomId] = useState(queryRoomId);\n\n  return (\n    <div className=\"join-room-page container container-slim\">\n      <h1 className=\"center mb-5\">C O D E N A M E S</h1>\n\n      <form onSubmit={e => e.preventDefault() || handleJoinRoom(componentRoomId)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"room-id\">Room ID</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"room-id\"\n              aria-describedby=\"roomJoinHelp\"\n              placeholder=\"90210\"\n              value={componentRoomId}\n              disabled={roomId && (roomId === componentRoomId)}\n              onChange={(e) => setComponentRoomId(e.target.value)}\n              required\n              autoComplete=\"nope\"\n            />\n          </div>\n          <small id=\"roomJoinHelp\" className=\"form-text text-muted\">Type in the Room ID</small>\n        </div>\n\n        <button\n          type=\"button\"\n          className={`btn btn-secondary ${componentRoomId ? '' : 'disabled'}`}\n          onClick={() => componentRoomId && handleJoinRoom(componentRoomId)}>\n          Join Room #{componentRoomId}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default JoinRoomPage;\n","import React, { useState } from 'react';\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nconst bgColourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\",\n  null: \"#FCECD7\",\n  doubleAgent: \"black\"\n}[team]);\n\nconst SetupPlayerPage = ({\n  userId,\n  username,\n  roomId,\n  roomName,\n  team,\n  role,\n  handleUpdatePlayer\n}) => {\n  const [componentUsername, setComponentUsername] = useState(username || \"\");\n  const [componentTeam, setComponentTeam] = useState(team || \"\");\n  const [componentRole, setComponentRole] = useState(role || \"\");\n\n  if (userId && username && roomId && team && role) return <Redirect to=\"/game\" />;\n\n  return (\n    <div className=\"setup-player-page container container-slim\">\n      <h1>C O D E N A M E S</h1>\n\n      <div className=\"form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Nickname</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              aria-describedby=\"usernameHelp\"\n              placeholder=\"Captain Falcon\"\n              value={componentUsername}\n              onChange={(e) => setComponentUsername(e.target.value)}\n              required\n              autoComplete=\"nope\"\n            />\n          </div>\n          <small id=\"usernameHelp\" className=\"form-text text-muted\">Up to 12 characters</small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"team\">Team</label>\n          <div className=\"row\" style={{marginRight: 0, marginLeft: 0}}>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentTeam === \"red\" ? bgColourForTeam(\"red\") : null,\n                backgroundColor: componentTeam === \"red\" ? bgColourForTeam(\"red\") : null\n              }}\n              onClick={() => setComponentTeam(\"red\")}>\n              Red\n            </button>\n            <span style={{width: 5}}></span>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentTeam === \"blue\" ? bgColourForTeam(\"blue\") : null,\n                backgroundColor: componentTeam === \"blue\" ? bgColourForTeam(\"blue\") : null\n              }}\n              onClick={() => setComponentTeam(\"blue\")}>\n              Blue\n            </button>\n          </div>\n          <small id=\"teamHelp\" className=\"form-text text-muted\">You can change it later</small>\n        </div>\n\n        {componentTeam && <div className=\"form-group\">\n          <label htmlFor=\"role\">Role</label>\n          <div className=\"row\" style={{marginRight: 0, marginLeft: 0}}>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentRole === \"spymaster\" ? bgColourForTeam(componentTeam) : null,\n                backgroundColor: componentRole === \"spymaster\" ? bgColourForTeam(componentTeam) : null\n              }}\n              onClick={() => setComponentRole(\"spymaster\")}>\n              Spymaster\n            </button>\n            <span style={{width: 5}}></span>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentRole === \"player\" ? bgColourForTeam(componentTeam) : null,\n                backgroundColor: componentRole === \"player\" ? bgColourForTeam(componentTeam) : null\n              }}\n              onClick={() => setComponentRole(\"player\")}>\n              Player\n            </button>\n          </div>\n          <small id=\"roleHelp\" className=\"form-text text-muted\">You can change it later</small>\n        </div>}\n\n        {!componentUsername && componentTeam && componentRole && <div className=\"mt-5\">Don't forget your name!</div>}\n\n        {componentUsername && componentTeam && componentRole &&\n          <button\n            type=\"button\"\n            className={'btn btn-secondary btn-block mt-5'}\n            onClick={() => handleUpdatePlayer({\n              username: componentUsername,\n              team: componentTeam,\n              role: componentRole\n            })}>\n            Join Game\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SetupPlayerPage;\n","export default {\n  host: \"host\",\n  activeTeam: \"blue\",\n  state: \"started\",\n  losingTeam: null,\n  blueTeamTotalCards: 8,\n  redTeamTotalCards: 7,\n  blueTeamScore: 0,\n  redTeamScore: 0,\n  words: [\n    {value: \"camp\", id: 1, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"deer\", id: 2, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"proposal\", id: 3, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"walk\", id: 4, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"dip\", id: 5, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"screw\", id: 6, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"denial\", id: 7, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"rich\", id: 8, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"know\", id: 9, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"sheet\", id: 10, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"lose\", id: 11, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"charm\", id: 12, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"pan\", id: 13, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"researcher\", id: 14, team: null, isDoubleAgent: true, isRevealed: false},\n    {value: \"tight\", id: 15, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"adoption\", id: 16, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"volcano\", id: 17, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"result\", id: 18, team: \"blue\", isDoubleAgent: false, isRevealed: false},\n    {value: \"crack\", id: 19, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"lemon\", id: 20, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"domestic\", id: 21, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"aware\", id: 22, team: null, isDoubleAgent: false, isRevealed: false},\n    {value: \"garbage\", id: 23, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"lover\", id: 24, team: \"red\", isDoubleAgent: false, isRevealed: false},\n    {value: \"organize\", id: 25, team: null, isDoubleAgent: false, isRevealed: false}\n  ]\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Socket } from 'phoenix';\n\n// import logo from './logo.svg';\nimport './App.css';\nimport GamePage from './pages/game';\nimport CreateRoomPage from './pages/create-room';\nimport ShareRoomPage from './pages/ShareRoomPage';\nimport JoinRoomPage from './pages/JoinRoomPage';\nimport SetupPlayerPage from './pages/SetupPlayerPage';\n\nimport dummyData from './lib/dummy';\n\nwindow.inspect = (obj) => {\n  console.log(obj);\n  return obj;\n}\n\nconst MOCK_BACKEND = true;\nconst RED_TEAM = \"red\";\nconst BLUE_TEAM = \"blue\";\n\nclass App extends React.Component {\n\n  state = Object.assign({\n    userId: null,\n    username: \"\",\n    roomId: null,\n    roomName: \"\",\n    team: null,\n    role: null,\n    words: [],\n    state: null,\n    losingTeam: null,\n    activeTeam: \"red\",\n    redTeamScore: 0,\n    redTeamTotalCards: 0,\n    blueTeamScore: 0,\n    blueTeamTotalCards: 0\n  }, dummyData)\n\n  toast = (msg) => {\n    this.setState({ msg: msg });\n\n    setTimeout(() => {\n      this.setState(prevState => {\n        if (prevState.msg === msg) {\n          return {\n            ...prevState,\n            msg: null\n          }\n        }\n\n        return msg;\n      });\n    }, 2000);\n  }\n\n  componentDidMount() {\n    const socket = new Socket(\"//localhost:4000/socket\", {params: {userToken: \"123\"}});\n    socket.connect();\n\n    const channel = socket.channel(\"room:lobby\");\n\n    channel.on(\"new_msg\", payload => {\n      console.log(`[${Date()}] ${JSON.stringify(payload.body)}`);\n    });\n\n    channel.on(\"player_message\", payload => {\n      if (payload.error) {\n        console.error(`[${Date()}] ${payload.error}`);\n        this.toast(payload.error);\n      } else {\n        console.log(`[${Date()}] ${JSON.stringify(payload)}`);\n      }\n    });\n\n    channel.on(\"player_state_update\", payload =>{\n      console.log(`[${Date()}] ${JSON.stringify(payload.body)}`);\n\n      const {\n        team,\n        room_id,\n        user_id\n      } = payload.body;\n\n      this.setState({\n        userId: user_id,\n        roomId: room_id,\n        team: team\n      })\n    });\n\n    channel.on(\"game_update\", payload => {\n      // console.log(`[${Date()}] ${JSON.stringify(payload.body)}`);\n      console.log(`[${Date()}] GAME UPDATE`);\n\n      const {\n        active_team,\n        words,\n        state,\n        losing_team,\n        blue_total,\n        red_total,\n        blue_score,\n        red_score,\n      } = payload.body;\n\n      this.setState({\n        words: words,\n        activeTeam: active_team,\n        redTeamTotalCards: red_total,\n        blueTeamTotalCards: blue_total,\n        redTeamScore: red_score,\n        blueTeamScore: blue_score,\n        losingTeam: losing_team,\n        state\n      });\n    });\n\n    channel.join()\n      .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n      .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n      .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\"));\n\n    this.setState({\n      channel, socket\n    });\n\n    window.channel = channel;\n    window.socket = socket;\n\n  }\n\n  _handleClick = () => {\n    this.state.channel.push(\"new_msg\", { body: \"I was clicked!\" });\n  }\n\n  handleNewRoom = () => {\n    this.state.channel.push(\"create_room\");\n  }\n\n  handleJoinRoom = (roomId) => {\n    const roomName = \"testing room name\";\n\n    if (MOCK_BACKEND) return this.setState({ roomId, roomName });\n\n    roomId = roomId || window.prompt(\"Room ID please?\");\n    this.state.channel.push(\"join_room\", {room: parseInt(roomId)});\n  }\n\n  handleNewGame = () => {\n    if (MOCK_BACKEND) return this.setState({ ...dummyData });\n    this.state.channel.push(\"create_game\");\n  }\n\n  handleTeamSelection = (team) => {\n    if (MOCK_BACKEND) return this.setState({ team });\n    this.state.channel.push(\"pick_team\", { team });\n  }\n\n  handleGameAction = (cardId) => {\n    if (MOCK_BACKEND) return this.clientSideGameAction(cardId);\n    this.state.channel.push(\"game_action\", {action: \"select\", id: cardId});\n  }\n\n  clientSideGameAction = (cardId) => {\n    if (!MOCK_BACKEND) window.alert(\"This should not be called...\");\n    this.setState(prevState => {\n      if (prevState.state === \"over\") return prevState;\n\n      const word = prevState.words.find(w => w.id === cardId);\n      let gameState = prevState.state;\n\n      if (word.isRevealed) return prevState;\n\n      if (word.isDoubleAgent) {\n        setTimeout(() => window.alert(`${activeTeam} Loses!`), 500);\n        gameState = \"over\";\n      }\n\n      const activeTeam = prevState.activeTeam;\n      let newActiveTeam = activeTeam;\n      if (word.team && word.team !== activeTeam) {\n        console.log(\"### You picked the other team's card!\", activeTeam, word);\n        newActiveTeam = activeTeam === RED_TEAM ? BLUE_TEAM : RED_TEAM;\n      }\n\n      let newState = {\n        ...prevState,\n        activeTeam: newActiveTeam,\n        words: prevState.words.map(w => ({\n          ...w,\n          isRevealed: w.isRevealed || w.id === cardId\n        }))\n      };\n\n      return window.inspect({\n        ...newState,\n        redTeamScore: newState.words.reduce((acc, curr) => (curr.isRevealed && curr.team === RED_TEAM) ? acc + 1 : acc, 0),\n        blueTeamScore: newState.words.reduce((acc, curr) => (curr.isRevealed && curr.team === BLUE_TEAM) ? acc + 1 : acc, 0),\n        state: gameState,\n        activeTeam: newActiveTeam\n      });\n    });\n  }\n\n  handleSelectWord = (word) => {\n    word.isRevealed || this.handleGameAction(word.id);\n  }\n\n  handleUpdatePlayer = ({ userId = 901, username, team, role }) => {\n    console.log(\"handleUpdatePlayer\", { username, team, role });\n\n    if (MOCK_BACKEND) return this.setState({ userId, username, team, role });\n  }\n\n  handleCreateRoom = (roomName) => {\n    console.log(\"handleCreateRoom\", roomName);\n    setTimeout(() => {\n      const roomId = \"RANDOM\";\n      console.log(\"mocking async room creation\", roomId, roomName);\n      this.setState({ roomId, roomName });\n    }, 200);\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"container center\">\n              <h1>C O D E N A M E S</h1>\n              <Link to=\"/create-room\">\n                <button className=\"btn btn-secondary\">Create a Room</button>\n              </Link>\n              <span style={{padding: 5}}></span>\n              <Link to=\"/game\">\n                <button className=\"btn btn-secondary\">Enter a Room</button>\n              </Link>\n            </div>\n          </Route>\n\n          <Route path=\"/create-room\">\n            <CreateRoomPage\n              roomId={this.state.roomId}\n              roomName={this.state.roomName}\n              handleCreateRoom={this.handleCreateRoom} />\n          </Route>\n\n          <Route path=\"/share-room\">\n            <ShareRoomPage\n              roomId={this.state.roomId}\n              roomName={this.state.roomName} />\n          </Route>\n\n          <Route path=\"/join-room\">\n            {this.state.roomId\n              ? <Redirect to=\"/setup-player\" />\n              : <JoinRoomPage\n                  userId={this.state.userId}\n                  username={this.state.username}\n                  roomId={this.state.roomId}\n                  roomName={this.state.roomName}\n                  handleJoinRoom={this.handleJoinRoom} />}\n          </Route>\n\n          <Route path=\"/setup-player\">\n            {!this.state.roomId\n              ? <Redirect to=\"/join-room\" />\n              : <SetupPlayerPage\n                  userId={this.state.userId}\n                  username={this.state.username}\n                  roomId={this.state.roomId}\n                  roomName={this.state.roomName}\n                  team={this.state.team}\n                  role={this.state.role}\n                  handleUpdatePlayer={this.handleUpdatePlayer} />}\n          </Route>\n\n          <Route path=\"/game\">\n            <GamePage\n              state={this.state}\n              handleNewRoom={this.handleNewRoom}\n              handleJoinRoom={this.handleJoinRoom}\n              handleNewGame={this.handleNewGame}\n              handleTeamSelection={this.handleTeamSelection}\n              handleGameAction={this.handleGameAction}\n              handleSelectWord={this.handleSelectWord}\n            />\n          </Route>\n\n          <Route>\n            <div>dont come here</div>\n            <Link to=\"/create-room\">create-room</Link>\n            <Link to=\"/game\">game</Link>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}