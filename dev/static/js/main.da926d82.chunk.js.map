{"version":3,"sources":["components/card/index.js","components/scorebar/index.js","components/timer/index.js","components/gameboard/index.js","pages/game.js","pages/create-room.js","pages/ShareRoomPage.js","pages/JoinRoomPage.js","pages/SetupPlayerPage.js","App.js","serviceWorker.js","index.js"],"names":["cardStyles","border","borderRadius","cursor","prepareCardStyle","word","teamStyles","doubleAgent","isDoubleAgent","isRevealed","bgColour","red","blue","null","team","backgroundColor","Object","assign","includes","color","Card","classValue","handleSelectWord","onClick","e","preventDefault","className","style","value","scorebarStyles","margin","prettyTeamName","colourForTeam","toLowerCase","addScoreBoxStyles","activeTeam","height","background","fontWeight","Scorebar","more","score","total","players","spymaster","map","player","idx","key","timeOut","percentRemaining","minutes","seconds","getTimeRemaining","expiresAt","startedAt","remainingMilliseconds","Date","now","totalTime","parseInt","Timer","props","start","frameId","requestAnimationFrame","tick","timeLeft","stop","setState","setTimeout","cancelAnimationFrame","state","this","textAlign","slice","formatTime","role","width","aria-valuenow","aria-valuemin","aria-valuemax","React","Component","Gameboard","redTeamScore","redTeamTotalCards","blueTeamScore","blueTeamTotalCards","words","to","i","id","Game","handleNewRoom","handleJoinRoom","handleNewGame","handleTeamSelection","handleGameAction","losingTeam","msg","CreateRoomPage","roomId","roomName","handleCreateRoom","useState","componentRoomName","setRoomname","htmlFor","type","aria-describedby","placeholder","onChange","target","shareLink","URL","window","location","href","origin","ShareRoomPage","linkTextRef","useRef","copiedStateMsg","setCopyState","ref","current","select","document","execCommand","focus","copyLinktoClipboard","JoinRoomPage","userId","username","queryRoomId","URLSearchParams","useLocation","search","get","componentRoomId","setComponentRoomId","onSubmit","disabled","required","autoComplete","bgColourForTeam","SetupPlayerPage","handleUpdatePlayer","componentUsername","setComponentUsername","componentTeam","setComponentTeam","componentRole","setComponentRole","marginRight","marginLeft","borderColor","inspect","obj","console","log","BASENAME","packageJson","homepage","LOBBY","App","toast","prevState","setupRoomChannel","socket","channel","on","payload","JSON","stringify","body","error","room_id","user_id","active_team","losing_team","blue_total","red_total","blue_score","red_score","join","receive","messages","push","reason","_handleClick","topic","leave","cardId","action","clientSideGameAction","alert","find","w","gameState","newActiveTeam","newState","reduce","acc","curr","Socket","BACKEND_URL","connect","basename","exact","path","padding","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.da926d82.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst cardStyles = {\n  border: \"2px black solid\",\n  borderRadius: \"10px\",\n  cursor: \"pointer\"\n};\n\nconst bgColourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\",\n  null: \"#FCECD7\",\n  doubleAgent: \"black\"\n}[team]);\n\nconst addFontColourForBgColour = (colour) => (\n  [\"#80C2FF\", \"#FCECD7\"].includes(colour) ? {} : { color: \"white\" }\n);\n\nconst prepareCardStyle = (word) => {\n  let teamStyles = {};\n  let doubleAgent = word.isDoubleAgent ? \"doubleAgent\" : false;\n\n  if (word.isRevealed) {\n    const bgColour = bgColourForTeam(doubleAgent || word.team);\n    teamStyles.backgroundColor = bgColour;\n    Object.assign(teamStyles, addFontColourForBgColour(bgColour));\n  }\n  return Object.assign({}, cardStyles, teamStyles);\n}\n\nconst Card = ({ classValue, handleSelectWord, word }) => (\n  <div\n    onClick={(e) => e.preventDefault() || handleSelectWord()}\n    className={`${classValue} game-card card-hover`}\n    style={prepareCardStyle(word)}\n  >\n    <p>{word.value}</p>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst scorebarStyles = {\n  margin: \"1rem\"\n};\n\nconst prettyTeamName = {\n  red: \"Red\",\n  blue: \"Blue\"\n};\n\nconst colourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\"\n}[team.toLowerCase()]);\n\nconst addComponentStyles = (more) => Object.assign({}, scorebarStyles, more || {});\n\nconst addScoreBoxStyles = ({ activeTeam, team }) => ({\n  border: `2px solid ${colourForTeam(team)}`,\n  borderRadius: \"20px\",\n  height: \"138px\",\n  color: activeTeam === team && \"white\",\n  background: activeTeam === team && colourForTeam(team),\n  fontWeight: activeTeam === team && \"bold\"\n});\n\nconst Scorebar = ({\n  activeTeam,\n  classValue,\n  score,\n  total,\n  team,\n  players,\n  spymaster\n}) => (\n  <div className={classValue} style={addComponentStyles()}>\n    <div style={addScoreBoxStyles({ activeTeam, team })}>\n      <p>Score</p>\n      <p>{`${score} / ${total}`}</p>\n    </div>\n\n    <p style={{color: colourForTeam(team)}}>\n      {prettyTeamName[team]}\n    </p>\n\n    <div>\n      <p style={{color: colourForTeam(team)}}>Players</p>\n      {players.map((player, idx) => <p key={idx}>{player}</p>)}\n    </div>\n\n    <p style={{color: colourForTeam(team)}}>Spymaster</p>\n    <p>{spymaster}</p>\n  </div>\n);\n\nexport default Scorebar;\n","import React from 'react'\nimport './Timer.css';\n\nconst timeOut = {\n  percentRemaining:0,\n  total:0,\n  minutes:0,\n  seconds:0\n};\n\nconst getTimeRemaining = (expiresAt, startedAt) => {\n  const remainingMilliseconds = expiresAt - Date.now();\n  const totalTime = (expiresAt - startedAt);\n\n  return {\n    percentRemaining: (Date.now() - startedAt) * 100 / totalTime,\n    total: remainingMilliseconds,\n    minutes: parseInt(remainingMilliseconds / (60 * 1000)),\n    seconds: parseInt(remainingMilliseconds / 1000)\n  };\n}\n\nconst formatTime = ({ minutes, seconds }) => `${minutes}:${(\"0\" + seconds % 60).slice(-2)}`;\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { timeLeft: getTimeRemaining(props.expiresAt, props.startedAt) }\n  }\n\n  // Wait until the component has mounted to start the animation frame\n  componentDidMount() {\n    this.start()\n  }\n\n  // Clean up by cancelling any animation frame previously scheduled\n  componentWillUnmount() {\n    this.stop()\n  }\n\n  start = () => {\n    this.frameId = requestAnimationFrame(this.tick)\n  }\n\n  tick = () => {\n    const timeLeft = getTimeRemaining(this.props.expiresAt, this.props.startedAt);\n\n    if (timeLeft.total <= 0) {\n      this.stop()\n      this.setState({ timeLeft: timeOut });\n      // ...any other actions to do on expiration\n    } else {\n      this.setState(\n        { timeLeft },\n        () => setTimeout(() => { this.frameId = requestAnimationFrame(this.tick) }, 1000 / 12)\n      )\n    }\n  }\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  render() {\n    return (\n      <div className={`${this.props.classValue} timer-component`}>\n        <i className={\"icon ion-icon ion-android-stopwatch\"} />\n        <div className={\"progress-bar-content\"}>\n          <div style={{textAlign: \"left\"}}>{formatTime(this.state.timeLeft)}</div>\n            <div className=\"progress\">\n              <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${this.state.timeLeft.percentRemaining}%`}} aria-valuenow={this.state.timeLeft.percentRemaining} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport Card from '../card';\nimport Scorebar from '../scorebar';\nimport Timer from '../timer';\nimport './Gameboard.css'\n\nconst colourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\"\n}[team]);\n\nconst prettyTeamName = {\n  red: \"Red\",\n  blue: \"Blue\"\n};\n\nconst turnIndicatorStyle = (team) => ({\n  color: colourForTeam(team)\n})\n\nconst Gameboard = ({\n  activeTeam,\n  handleSelectWord,\n  redTeamScore,\n  redTeamTotalCards,\n  blueTeamScore,\n  blueTeamTotalCards,\n  words\n}) => (\n  <div>\n    <Link to=\"/\"><h1>C O D E N A M E S</h1></Link>\n    <h2 style={turnIndicatorStyle(activeTeam)}>{prettyTeamName[activeTeam]}'s Turn</h2>\n    <div className={\"timer-wrapper\"}>\n      <Timer classValue={\"timer-container\"} startedAt={Date.now()} expiresAt={Date.now() + (2 * 60 * 1000)} />\n    </div>\n    <div className=\"wrapper\">\n      <Scorebar\n        activeTeam={activeTeam}\n        classValue={\"left-sidebar\"}\n        score={redTeamScore}\n        total={redTeamTotalCards}\n        team={\"red\"}\n        players={[\"shoyu\", \"scallion\", \"nori\"]}\n        spymaster={\"chasu\"}\n        />\n\n      <div className=\"gameboard\">\n        {[0, 1, 2, 3, 4].map(i =>\n          <div key={i} className=\"card-row\">\n            {words.slice(0 + i * 5, 5 + i * 5).map(word =>\n              <Card\n                key={word.id}\n                word={word}\n                handleSelectWord={() => handleSelectWord(word, activeTeam)}\n                classValue={\"card\"}\n              />\n            )}\n          </div>\n        )}\n      </div>\n\n      <Scorebar\n        activeTeam={activeTeam}\n        classValue={\"right-sidebar\"}\n        score={blueTeamScore}\n        total={blueTeamTotalCards}\n        team={\"blue\"}\n        players={[\"shoyu\", \"scallion\", \"nori\"]}\n        spymaster={\"chasu\"}\n        />\n    </div>\n  </div>\n);\n\nexport default Gameboard;\n","import React from 'react';\nimport Gameboard from '../components/gameboard';\n\nconst Game = ({\n  state,\n  handleNewRoom,\n  handleJoinRoom,\n  handleNewGame,\n  handleTeamSelection,\n  handleGameAction,\n  handleSelectWord\n}) => (\n  <div className=\"App\">\n    <button onClick={() => handleNewRoom()}>Sign Into Room</button>\n    <button onClick={() => handleJoinRoom()}>Join Room</button>\n    <button onClick={() => handleNewGame()}>New Game</button>\n    <button onClick={() => handleTeamSelection(\"red\")}>I am red!</button>\n    <button onClick={() => handleTeamSelection(\"blue\")}>I am blue!</button>\n    <button onClick={() => handleGameAction(2)}>Take action!</button>\n    <div>Game has {state.state}</div>\n    {state.losingTeam && <div>{state.losingTeam} lost!</div>}\n    {state.msg && <div className=\"alert alert-danger\" role=\"alert\">Error: {state.msg}</div>}\n    <Gameboard\n      activeTeam={state.activeTeam}\n      redTeamScore={state.redTeamScore}\n      redTeamTotalCards={state.redTeamTotalCards}\n      blueTeamScore={state.blueTeamScore}\n      blueTeamTotalCards={state.blueTeamTotalCards}\n      handleSelectWord={handleSelectWord}\n      words={state.words} />\n  </div>\n);\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nconst CreateRoomPage = ({\n  roomId,\n  roomName,\n  handleCreateRoom\n}) => {\n  const [componentRoomName, setRoomname] = useState(roomName);\n  return (\n    roomId\n    ? <Redirect to=\"share-room\" />\n    : <div className=\"create-room-page container container-slim\">\n      <h1 className=\"center mb-5\">C O D E N A M E S</h1>\n\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"roomname\">Room name</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"roomname\"\n              aria-describedby=\"roomnameHelp\"\n              placeholder=\"zeekybookydook\"\n              value={componentRoomName}\n              onChange={(e) => setRoomname(e.target.value)}\n            />\n\n            <div className=\"input-group-append\">\n              <div className=\"btn btn-primary disabled\">Random</div>\n            </div>\n          </div>\n          <small id=\"roomnameHelp\" className=\"form-text text-muted\">minimum of 6 characters</small>\n        </div>\n\n        <button\n          type=\"button\"\n          className={`btn btn-secondary ${componentRoomName ? '' : 'disabled'}`}\n          onClick={() => componentRoomName && handleCreateRoom(componentRoomName)}>\n          Create a Room\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateRoomPage;\n","import React, { useState, useRef } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst shareLink = (roomId) => {\n  return `${new URL(window.location.href).origin}/join-room?roomId=${roomId}`\n};\n\nconst copyLinktoClipboard = (e, linkTextRef, setCopyState) => {\n  linkTextRef.current.select();\n  document.execCommand('copy');\n\n  e.target.focus();\n  setCopyState(\"Link Copied! \");\n};\n\nconst ShareRoomPage = ({ roomId, roomName }) => {\n  const linkTextRef = useRef(null);\n  const [copiedStateMsg, setCopyState] = useState(\"\");\n\n  return (\n    <div className=\"share-room-page container container-slim\">\n      <h1 className=\"center mb-5\">C O D E N A M E S</h1>\n      <div>Your room is ready!</div>\n\n      <div className=\"input-group mt-4\">\n        <input\n          ref={linkTextRef}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"roomShare\"\n          aria-describedby=\"roomShareHelp\"\n          value={shareLink(roomId)}\n          onChange={e => e.preventDefault()}\n        />\n\n        <div className=\"input-group-append\">\n          <div className=\"btn btn-primary\" onClick={e => copyLinktoClipboard(e, linkTextRef, setCopyState)}>Copy</div>\n        </div>\n\n      </div>\n      <small id=\"roomShareHelp\" className=\"form-text text-muted\">{copiedStateMsg + \"Share the link with your friends!\"}</small>\n\n      <Link to={`/join-room?roomId=${roomId}`}>\n        <button type=\"button\" className=\"btn btn-secondary mt-4\">Open Room</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default ShareRoomPage;\n","import React, { useState } from 'react';\nimport {\n  Link,\n  useLocation\n} from \"react-router-dom\";\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst JoinRoomPage = ({\n  userId,\n  username,\n  roomId,\n  roomName,\n  handleJoinRoom\n}) => {\n  const queryRoomId = useQuery().get(\"roomId\") || \"\";\n  const [componentRoomId, setComponentRoomId] = useState(queryRoomId);\n\n  return (\n    <div className=\"join-room-page container container-slim\">\n      <Link to=\"/\"><h1 className=\"center mb-5\">C O D E N A M E S</h1></Link>\n\n      <form onSubmit={e => e.preventDefault() || handleJoinRoom(componentRoomId)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"room-id\">Room ID</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"room-id\"\n              aria-describedby=\"roomJoinHelp\"\n              placeholder=\"90210\"\n              value={componentRoomId}\n              disabled={roomId && (roomId === componentRoomId)}\n              onChange={(e) => setComponentRoomId(e.target.value)}\n              required\n              autoComplete=\"nope\"\n            />\n          </div>\n          <small id=\"roomJoinHelp\" className=\"form-text text-muted\">Type in the Room ID</small>\n        </div>\n\n        <button\n          type=\"button\"\n          className={`btn btn-secondary ${componentRoomId ? '' : 'disabled'}`}\n          onClick={() => componentRoomId && handleJoinRoom(componentRoomId)}>\n          Join Room #{componentRoomId}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default JoinRoomPage;\n","import React, { useState } from 'react';\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nconst bgColourForTeam = (team) => ({\n  red: \"#CD3B49\",\n  blue: \"#80C2FF\",\n  null: \"#FCECD7\",\n  doubleAgent: \"black\"\n}[team]);\n\nconst SetupPlayerPage = ({\n  userId,\n  username,\n  roomId,\n  roomName,\n  team,\n  role,\n  handleUpdatePlayer\n}) => {\n  const [componentUsername, setComponentUsername] = useState(username || \"\");\n  const [componentTeam, setComponentTeam] = useState(team || \"\");\n  const [componentRole, setComponentRole] = useState(role || \"\");\n\n  if (userId && username && roomId && team && role) return <Redirect to=\"/game\" />;\n\n  return (\n    <div className=\"setup-player-page container container-slim\">\n      <h1>C O D E N A M E S</h1>\n\n      <div className=\"form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Nickname</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              aria-describedby=\"usernameHelp\"\n              placeholder=\"Captain Falcon\"\n              value={componentUsername}\n              onChange={(e) => setComponentUsername(e.target.value)}\n              required\n              autoComplete=\"nope\"\n            />\n          </div>\n          <small id=\"usernameHelp\" className=\"form-text text-muted\">Up to 12 characters</small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"team\">Team</label>\n          <div className=\"row\" style={{marginRight: 0, marginLeft: 0}}>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentTeam === \"red\" ? bgColourForTeam(\"red\") : null,\n                backgroundColor: componentTeam === \"red\" ? bgColourForTeam(\"red\") : null\n              }}\n              onClick={() => setComponentTeam(\"red\")}>\n              Red\n            </button>\n            <span style={{width: 5}}></span>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentTeam === \"blue\" ? bgColourForTeam(\"blue\") : null,\n                backgroundColor: componentTeam === \"blue\" ? bgColourForTeam(\"blue\") : null\n              }}\n              onClick={() => setComponentTeam(\"blue\")}>\n              Blue\n            </button>\n          </div>\n          <small id=\"teamHelp\" className=\"form-text text-muted\">You can change it later</small>\n        </div>\n\n        {componentTeam && <div className=\"form-group\">\n          <label htmlFor=\"role\">Role</label>\n          <div className=\"row\" style={{marginRight: 0, marginLeft: 0}}>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentRole === \"spymaster\" ? bgColourForTeam(componentTeam) : null,\n                backgroundColor: componentRole === \"spymaster\" ? bgColourForTeam(componentTeam) : null\n              }}\n              onClick={() => setComponentRole(\"spymaster\")}>\n              Spymaster\n            </button>\n            <span style={{width: 5}}></span>\n            <button\n              className=\"btn btn-secondary col\"\n              style={{\n                height: 50,\n                borderColor: componentRole === \"player\" ? bgColourForTeam(componentTeam) : null,\n                backgroundColor: componentRole === \"player\" ? bgColourForTeam(componentTeam) : null\n              }}\n              onClick={() => setComponentRole(\"player\")}>\n              Player\n            </button>\n          </div>\n          <small id=\"roleHelp\" className=\"form-text text-muted\">You can change it later</small>\n        </div>}\n\n        {!componentUsername && componentTeam && componentRole && <div className=\"mt-5\">Don't forget your name!</div>}\n\n        {componentUsername && componentTeam && componentRole &&\n          <button\n            type=\"button\"\n            className={'btn btn-secondary btn-block mt-5'}\n            onClick={() => handleUpdatePlayer({\n              username: componentUsername,\n              team: componentTeam,\n              role: componentRole\n            })}>\n            Join Game\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SetupPlayerPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Socket } from 'phoenix';\n\n// import logo from './logo.svg';\nimport './App.css';\nimport GamePage from './pages/game';\nimport CreateRoomPage from './pages/create-room';\nimport ShareRoomPage from './pages/ShareRoomPage';\nimport JoinRoomPage from './pages/JoinRoomPage';\nimport SetupPlayerPage from './pages/SetupPlayerPage';\n\nimport dummyData from './lib/dummy';\nimport packageJson from '../package.json';\n\nwindow.inspect = (obj) => {\n  console.log(obj);\n  return obj;\n}\n\n// const BACKEND_URL = \"//localhost:4000\";\nconst BACKEND_URL = \"//spymanz-be.herokuapp.com\";\nconst DEBUG = true;\nconst MOCK_BACKEND = false;\nconst BASENAME = packageJson.homepage;\nconst RED_TEAM = \"red\";\nconst BLUE_TEAM = \"blue\";\nconst LOBBY = \"room:lobby\"\n\nclass App extends React.Component {\n\n  state = Object.assign({\n    userId: null,\n    username: \"\",\n    roomId: null,\n    roomName: \"ROOM NAME!\",\n    team: null,\n    role: null,\n    words: [],\n    state: null,\n    losingTeam: null,\n    activeTeam: \"red\",\n    redTeamScore: 0,\n    redTeamTotalCards: 0,\n    blueTeamScore: 0,\n    blueTeamTotalCards: 0\n  }, MOCK_BACKEND ? dummyData : {})\n\n  toast = (msg) => {\n    this.setState({ msg: msg });\n\n    setTimeout(() => {\n      this.setState(prevState => {\n        if (prevState.msg === msg) {\n          return {\n            ...prevState,\n            msg: null\n          }\n        }\n\n        return msg;\n      });\n    }, 2000);\n  }\n\n  componentDidMount() {\n    const socket = new Socket(BACKEND_URL + \"/socket\"); //, {params: {userToken: \"123\"}});\n    socket.connect();\n\n    const channel = socket.channel(LOBBY);\n\n    channel.on(\"player_state_update\", payload =>{\n      console.log(`[${Date()}] ${JSON.stringify(payload.body)}`);\n\n      const {\n        room_id,\n        user_id\n      } = payload.body;\n\n      this.setState({\n        userId: user_id,\n        roomId: room_id\n      });\n\n      if (room_id) {\n        channel.leave();\n        this.setupRoomChannel(socket, room_id);\n      }\n    });\n\n    channel.join()\n      .receive(\"ok\", ({messages}) => console.log(\"fetching player_state_update\", channel.push(\"push_player_state\")) )\n      .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n      .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\"));\n\n    this.setState({\n      channel, socket\n    });\n\n    window.channel = channel;\n    window.socket = socket;\n\n  }\n\n  setupRoomChannel = (socket, roomId) => {\n    console.log(`setting up channel room:${roomId}`);\n    const channel = socket.channel(`room:${roomId}`);\n\n    channel.on(\"new_msg\", payload => {\n      console.log(`[${Date()}] ${JSON.stringify(payload.body)}`);\n    });\n\n    channel.on(\"player_message\", payload => {\n      if (payload.error) {\n        console.error(`[${Date()}] ${payload.error}`);\n        this.toast(payload.error);\n      } else {\n        console.log(`[${Date()}] ${JSON.stringify(payload)}`);\n      }\n    });\n\n    channel.on(\"player_state_update\", payload =>{\n      console.log(`[${Date()}] player_state_update: ${JSON.stringify(payload.body)}`);\n\n      const {\n        team,\n        room_id,\n        user_id,\n        username,\n        role\n      } = payload.body;\n\n      this.setState({\n        userId: user_id,\n        roomId: room_id,\n        username,\n        role,\n        team\n      });\n    });\n\n    channel.on(\"game_update\", payload => {\n      console.log(`[${Date()}] GAME UPDATE`, payload.body);\n\n      const {\n        active_team,\n        words,\n        state,\n        losing_team,\n        blue_total,\n        red_total,\n        blue_score,\n        red_score,\n      } = payload.body;\n\n      this.setState({\n        words: words,\n        activeTeam: active_team,\n        redTeamTotalCards: red_total,\n        blueTeamTotalCards: blue_total,\n        redTeamScore: red_score,\n        blueTeamScore: blue_score,\n        losingTeam: losing_team,\n        state\n      });\n    });\n\n    channel.join()\n      .receive(\"ok\", ({messages}) => console.log(\"fetching player_state_update\", channel.push(\"push_player_state\")) )\n      .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n      .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\"));\n\n    this.setState({ channel });\n    window.channel = channel;\n  }\n\n  _handleClick = () => {\n    this.state.channel.push(\"new_msg\", { body: \"I was clicked!\" });\n  }\n\n  handleNewRoom = () => {\n    this.state.channel.push(\"create_room\");\n  }\n\n  handleJoinRoom = (roomId) => {\n    const roomName = \"testing room name\";\n\n    if (MOCK_BACKEND) return this.setState({ roomId, roomName });\n\n    if (this.state.channel.topic === LOBBY) {\n      console.log(\"closing lobby channel\", this.state.channel);\n      this.state.channel.leave();\n\n      this.setupRoomChannel(this.state.socket, roomId);\n    }\n  }\n\n  handleNewGame = () => {\n    if (MOCK_BACKEND) return this.setState({ ...dummyData });\n    this.state.channel.push(\"create_game\");\n  }\n\n  handleTeamSelection = (team) => {\n    if (MOCK_BACKEND) return this.setState({ team });\n    this.state.channel.push(\"pick_team\", { team });\n  }\n\n  handleGameAction = (cardId) => {\n    console.log(\"handleGameAction\");\n    if (this.state.activeTeam !== this.state.team) this.toast(\"not your team's turn!\");\n\n    if (MOCK_BACKEND) return this.clientSideGameAction(cardId);\n    this.state.channel.push(\"game_action\", {action: \"select\", id: cardId});\n  }\n\n  clientSideGameAction = (cardId) => {\n    if (!MOCK_BACKEND) window.alert(\"This should not be called...\");\n    this.setState(prevState => {\n      if (prevState.state === \"over\") return prevState;\n\n      const word = prevState.words.find(w => w.id === cardId);\n      let gameState = prevState.state;\n\n      if (word.isRevealed) return prevState;\n\n      if (word.isDoubleAgent) {\n        setTimeout(() => window.alert(`${activeTeam} Loses!`), 500);\n        gameState = \"over\";\n      }\n\n      const activeTeam = prevState.activeTeam;\n      let newActiveTeam = activeTeam;\n      if (word.team && word.team !== activeTeam) {\n        console.log(\"### You picked the other team's card!\", activeTeam, word);\n        newActiveTeam = activeTeam === RED_TEAM ? BLUE_TEAM : RED_TEAM;\n      }\n\n      let newState = {\n        ...prevState,\n        activeTeam: newActiveTeam,\n        words: prevState.words.map(w => ({\n          ...w,\n          isRevealed: w.isRevealed || w.id === cardId\n        }))\n      };\n\n      return window.inspect({\n        ...newState,\n        redTeamScore: newState.words.reduce((acc, curr) => (curr.isRevealed && curr.team === RED_TEAM) ? acc + 1 : acc, 0),\n        blueTeamScore: newState.words.reduce((acc, curr) => (curr.isRevealed && curr.team === BLUE_TEAM) ? acc + 1 : acc, 0),\n        state: gameState,\n        activeTeam: newActiveTeam\n      });\n    });\n  }\n\n  handleSelectWord = (word) => {\n    console.log(\"handleSelectWord\");\n    word.isRevealed || this.handleGameAction(word.id);\n  }\n\n  handleUpdatePlayer = ({ username, team, role }) => {\n    console.log(\"handleUpdatePlayer\", { username, team, role });\n\n    if (MOCK_BACKEND) return this.setState({ username, team, role });\n    this.state.channel.push(\"update_player\", { username, team, role });\n  }\n\n  handleCreateRoom = (roomName) => {\n    console.log(\"handleCreateRoom\", roomName);\n    if (MOCK_BACKEND) return setTimeout(() => {\n      const roomId = \"RANDOM\";\n      console.log(\"mocking async room creation\", roomId, roomName);\n      this.setState({ roomId, roomName });\n    }, 200);\n\n    this.state.channel.push(\"create_room\");\n  }\n\n  render() {\n    return (\n      <Router basename={BASENAME}>\n        {DEBUG && <div>Player: {JSON.stringify({ userId: this.state.userId, username: this.state.username, roomId: this.state.roomId, roomName: this.state.roomName, team: this.state.team, role: this.state.role })}</div>}\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"container center\">\n              <h1>C O D E N A M E S</h1>\n              <Link to=\"/create-room\">\n                <button className=\"btn btn-secondary\">Create a Room</button>\n              </Link>\n              <span style={{padding: 5}}></span>\n              <Link to=\"/game\">\n                <button className=\"btn btn-secondary\">Enter a Room</button>\n              </Link>\n            </div>\n          </Route>\n\n          <Route path=\"/create-room\">\n            <CreateRoomPage\n              roomId={this.state.roomId}\n              roomName={this.state.roomName}\n              handleCreateRoom={this.handleCreateRoom} />\n          </Route>\n\n          <Route path=\"/share-room\">\n            <ShareRoomPage\n              roomId={this.state.roomId}\n              roomName={this.state.roomName} />\n          </Route>\n\n          <Route path=\"/join-room\">\n            {this.state.roomId\n              ? <Redirect to=\"/setup-player\" />\n              : <JoinRoomPage\n                  userId={this.state.userId}\n                  username={this.state.username}\n                  roomId={this.state.roomId}\n                  roomName={this.state.roomName}\n                  handleJoinRoom={this.handleJoinRoom} />}\n          </Route>\n\n          <Route path=\"/setup-player\">\n            {!this.state.roomId\n              ? <Redirect to=\"/join-room\" />\n              : <SetupPlayerPage\n                  userId={this.state.userId}\n                  username={this.state.username}\n                  roomId={this.state.roomId}\n                  roomName={this.state.roomName}\n                  team={this.state.team}\n                  role={this.state.role}\n                  handleUpdatePlayer={this.handleUpdatePlayer} />}\n          </Route>\n\n          <Route path=\"/game\">\n            {!this.state.roomId\n              ? <Redirect to=\"/join-room\" />\n              : <GamePage\n                  state={this.state}\n                  handleNewRoom={this.handleNewRoom}\n                  handleJoinRoom={this.handleJoinRoom}\n                  handleNewGame={this.handleNewGame}\n                  handleTeamSelection={this.handleTeamSelection}\n                  handleGameAction={this.handleGameAction}\n                  handleSelectWord={this.handleSelectWord}\n                />}\n          </Route>\n\n          <Route>\n            <div>dont come here</div>\n            <ul>\n              <li><Link to=\"/\">Landing</Link></li>\n              <li><Link to=\"/create-room\">create-room</Link></li>\n              <li><Link to=\"/game\">game</Link></li>\n            </ul>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}